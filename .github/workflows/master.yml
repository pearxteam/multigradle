name: Test & Deploy | master

on:
  push:
    branches:
      - "master"
jobs:
  check_macos:
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: ./gradlew --no-daemon check
  check_windows:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: CALL gradlew.bat --no-daemon check
        shell: cmd
  check_deploy_linux:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: 'echo "$PGP_KEY_PRIVATE" | base64 --decode > "$(pwd)/private.key"'
        shell: bash
        env:
          PGP_KEY_PRIVATE: ${{secrets.PGP_KEY_PRIVATE}}
      - run: './gradlew --no-daemon publishRelease -PgithubAccessToken=${{ secrets.GIT_HUB_RELEASE_TOKEN }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} -Psigning.keyId=${{ secrets.PGP_KEY_PUBID }} -Psigning.password="${{ secrets.PGP_KEY_PASSWORD }}" -Psigning.secretKeyRingFile="$(pwd)/private.key"'